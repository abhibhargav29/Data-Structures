#Graph_Implemented

9.0)We have implemented a weighted undirected graph using adjacency list representation. We have add edge, remove edge, BFS, DFS, cycle detection, shortest path and
minimum spanning tree methods in the class itself. We use list of list for adjacency list. The number of vertices can't be changed and are given in the starting.
--We have two BFS functions and similarly two DFS functions.
--One is for simple traversal from a given source and it prints all nodes directly or indirectly reachable from it.
--Another one takes in just the graph and prints all nodes (all the disconneted components as well). It also tells the number of components in graph.
--Cycle detection is based on DFS and returns boolean value.
--We have Dijikstra's algorithm implemented using min heap which is imported from another file named "ModifiedHeap".
--We also have Bellman ford algorithm for shortest path which works for negative weights and detects negative weight cycle as well.
--Prims algotithm is used for MST and it also uses min heap.
It assumes lowest numbered node as the source for a component and prints DFS/BFS accordingly.

9.1)We have implemented a weighted directed graph using adjacency list representation. We have add edge, remove edge, Topological sort, cycle detection and shortest path 
method in the class itself. We have implmented all the functions with dfs and bfs based both.
--The cycle dteect is implemented using DFS nad BFS both.
--For topological sort, absence of cycle is necessary, so we have an initial check for that.
--The shortest path algo is only for DAG.

9.2)The modified min heap takes in two values for each entry, one the distance and second the vertex number, the heap is made on the basis of distance.
The vertex is used to recognize it using a hashtable "pos" that stores position of each vertex to later retireve in O(1) tinme. The file here is saved as 
"9.2)ModifiedHeap.py" but thats just to maintain order and on system "9.2)" needs to be removed as it will cause syntax error.
